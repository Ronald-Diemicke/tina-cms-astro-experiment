---
import client from "../../tina/__generated__/client"
import { Debug } from 'astro:components';
import {PageQuery, PageQueryVariables} from "../../tina/__generated__/types";
import TitleComponent from "../components/titleComponent";
import SampleBlocksSection from "../components/sampleBlocksSection"
import Layout from "@layouts/base.astro"

interface Props {
  tinaProps: {
    variables: PageQueryVariables;
    data: PageQuery;
    query: string;
  };
}

export async function getStaticPaths() {
  const pages = await client.queries.pageConnection();

    const pageNames =  pages.data.pageConnection.edges!.map((page) => {
      return {
        params: {
          relativePath: page!.node!._sys.relativePath,
          path: page!.node!._sys.filename
        }
      }
    });


  const pagesData = await Promise.all(
      pageNames.map(async ({ params }) => {
        //console.log('pageNames',params);
        return await client.queries.page({ relativePath: params.relativePath });
      })
  );

  return pagesData.map((page) => {
    //console.log('return', page);
    //console.log('_sys', page.data.page._sys);
    let retunobj = {
      params: { path: page.data.page._sys.breadcrumbs.join('/') },
      props: { tinaProps: { ...page } },
    };
    //console.log('returnobj', retunobj);
    return retunobj;
  });
}

const { tinaProps } = Astro.props;

/*const { data } = useTina({
  query: directResponse.query,
  variables: directResponse.variables,
  data: directResponse.data,
})*/

---
<Layout>
    <TitleComponent client:tina={import.meta.env.DEV} tinaProps={tinaProps} />
    <SampleBlocksSection client:tina={import.meta.env.DEV} tinaProps={tinaProps} />
    <!--Debug answer={tinaProps}/-->
</Layout>